{
  "version": 4,
  "terraform_version": "1.0.2",
  "serial": 17,
  "lineage": "a415ae19-bc3d-89a5-d92c-bef6d1c81cad",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "azurerm_kubernetes_cluster",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "addon_profile": [
              {
                "azure_policy": [],
                "http_application_routing": [],
                "ingress_application_gateway": [],
                "kube_dashboard": [],
                "oms_agent": [
                  {
                    "enabled": true,
                    "log_analytics_workspace_id": "/subscriptions/aa2aa30f-ca48-45d2-aed8-11a3850565bd/resourceGroups/hcpResourceGroup/providers/Microsoft.OperationalInsights/workspaces/testLogAnalyticsWorkspaceName-17553256447469927357",
                    "oms_agent_identity": []
                  }
                ]
              }
            ],
            "agent_pool_profile": [
              {
                "availability_zones": [],
                "count": 3,
                "enable_auto_scaling": false,
                "enable_node_public_ip": false,
                "max_count": 0,
                "max_pods": 110,
                "min_count": 0,
                "name": "agentpool",
                "node_labels": {},
                "node_public_ip_prefix_id": "",
                "node_taints": [],
                "orchestrator_version": "1.19.11",
                "os_disk_size_gb": 128,
                "os_type": "Linux",
                "tags": {},
                "type": "VirtualMachineScaleSets",
                "upgrade_settings": [],
                "vm_size": "Standard_D2_v2",
                "vnet_subnet_id": ""
              }
            ],
            "api_server_authorized_ip_ranges": [],
            "disk_encryption_set_id": "",
            "dns_prefix": "k8stest",
            "fqdn": "k8stest-eff13102.hcp.centralus.azmk8s.io",
            "id": "/subscriptions/aa2aa30f-ca48-45d2-aed8-11a3850565bd/resourcegroups/hcpResourceGroup/providers/Microsoft.ContainerService/managedClusters/k8stest",
            "identity": [],
            "kube_admin_config": [],
            "kube_admin_config_raw": "",
            "kube_config": [
              {
                "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIakNDQXdhZ0F3SUJBZ0lSQUphdlBIZzgwMzVhd1VSdjNad1A0dzh3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpFd056SXdNREUxT0RFeFdoY05Nak13TnpJd01ESXdPREV4V2pBdwpNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6RVZNQk1HQTFVRUF4TU1iV0Z6ZEdWeVkyeHBaVzUwCk1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBdVNDNXpYc3JhRXFjWEgyWmZ3b2oKU1ROUWZwQ215QkFDd01ubU1VV3JHcVZVN0VoUUtITjBhSU91TEJ0NFhZNDY0SmFyTjI0cERBb2c3YURXejNINQpnVGRSL0hXZENEcUpOcHVoblRKR2p2VWp3KzNjdmQyWElaT3k4Z3FqSE4vbmpHWXJxdmJKUFVYbWRVa21hZm1DClYwZG1FdHhGeXcyRHRLZ2RWeFY5ZDEzbExiTnpBOWJkMFVVdzMrd0VKUStBMk5FRTI3RlFsNU04dWlueCtycG4KKzJIQUkyRzEzRnlENnE1SitYa0NGRVdqWGJNbXUwSE5tZHF0Z21LR04zQ1Y3UHFLYlpQR1hEOTlyTHJBUW9ZMApSakNxSDczMGw5MUFFa0kyMnNXRkw3ZWMrSmZET3IwQ3c2K0lVUUk3enYxbCtHb1JBMnRMbmRqMjhublRKaGVuCk8wNmtMZGM1enI3SzNpbk12Zzl4QTdNSHE5MGFNMGF6UW8vaGZYeHBOM2VNS1AzdHRpQ3BUS3BaOWlCTjQxbzgKMlFlakJRK0JnQmd0RVYzVFVVQndHNEtUUXExTDQvR3JjaUNpcGUyOEphd29ORDBmYVhsM3hVYmlJaTYxV2MzVQpScGVudmVScC9RNGNUZWNLclRsVk1YZFZuTjBoTmorVSs3cHhqMm9NcjhGNk55US9KRTRnS2w1a3QyK1dkeVJyCm1LbWVJdGFMT3NicVFDWUZWVldCVmJ4NnpXZlBBTW1BUTM1di9YaHZLTDV3Wm9wdWgyZ0xLUmZkczEyTUI0U3EKS2J0ejFHaEZDdEdjcnlwQmdPNi8xZjhjem4zUkw1RU90QjBENWoxeE5YUFFIUjkrcURyN3pWTE1qNUlsMTRhUApPWEVBMjdPbDkyUDVQcXFnemhxUmRJOENBd0VBQWFOV01GUXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkCkpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVZWg1eGVsNTMKZzF1RzRWdGNUZkorS3pVeUhuMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBRjc1RUFLMENJUlI2YzFVK2t5cwp3Z0ZtakRiUERaL1NhNDN5d081THJ3NTQrdG5XeTNTeVZuMmM1bFQ0ZlZUZUJ2QTM2alhVcW1FcEJiWWUwc2F5CjRzSFJyUFhYUjNFS2tGMGxHek1oMDA5RFM1TWQrMzdRSHhGSytpbFdJVDBQWFIwQUZGekIyZW5hYmtyMENON1YKOVZiUlE1NUJVb21QZ2x3NlozUW5GRGJkV2tFWXNWVCttM3J2YWlsbEFrWVQ3OUw0a1NWOXVjaGdvbFg0MDcwMgpqa1NOUzYyK2FwTHp4YXRYUjhzQWdjVXc0OHRZSkdoWVRLV3lqZEVwU25CeUV3bVMzcExlYjhaRWM3OHFJZkdXCjkvSjNBYnI2TC85azh3NVhoNzJJRVJQMzFTSlZzNkFvUmV6TU5yajdPZndLK25Pb0FkSGlsTHN2WlFLbXhXS2wKaFo5Mk9TWjdzYnhZMmFlVmRFZDRJS2d5VFVBcFg3a1B4ME82anRnbnEvbU9hc2hFWWNNTXo5SFN0akxFUjJVUQpvVERzSzlRcm50Q2dtS3BuN1J0Tlk4MFIxUzFMZFZpQ3JnZHMxTU1nVko3SXFyRnduK1RlNElSNU42M0U5YTRyCnp6SFNLL2dwU3ZmTTZCN0p0ZUVrM2Rac2JaU0c5QTJYM3BUdEx3NTVlN2dWbHJPbmhDb2VyR3pGTHhDQURSZDgKNmtLR2Y4UjF2RlZwVGcydUJPZFUxU1RXdU5HaG9sRmhjTnBabThZUHYrQ0ZkUk5nbnBPQjdnM1o0enNmQjNUdQpNRHFuQ2FVNjczb0dISFFwaWxsbG8zR1ZjclpNL2M2M3JLdjVETnlSZTRFMG1GdnFCTjFPR1BrNVgzOVdBZWNGCkpYQW5MYnNIc3R2VE12Yi9NbDVHR0xQcwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "client_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBdVNDNXpYc3JhRXFjWEgyWmZ3b2pTVE5RZnBDbXlCQUN3TW5tTVVXckdxVlU3RWhRCktITjBhSU91TEJ0NFhZNDY0SmFyTjI0cERBb2c3YURXejNINWdUZFIvSFdkQ0RxSk5wdWhuVEpHanZVancrM2MKdmQyWElaT3k4Z3FqSE4vbmpHWXJxdmJKUFVYbWRVa21hZm1DVjBkbUV0eEZ5dzJEdEtnZFZ4VjlkMTNsTGJOegpBOWJkMFVVdzMrd0VKUStBMk5FRTI3RlFsNU04dWlueCtycG4rMkhBSTJHMTNGeUQ2cTVKK1hrQ0ZFV2pYYk1tCnUwSE5tZHF0Z21LR04zQ1Y3UHFLYlpQR1hEOTlyTHJBUW9ZMFJqQ3FINzMwbDkxQUVrSTIyc1dGTDdlYytKZkQKT3IwQ3c2K0lVUUk3enYxbCtHb1JBMnRMbmRqMjhublRKaGVuTzA2a0xkYzV6cjdLM2luTXZnOXhBN01IcTkwYQpNMGF6UW8vaGZYeHBOM2VNS1AzdHRpQ3BUS3BaOWlCTjQxbzgyUWVqQlErQmdCZ3RFVjNUVVVCd0c0S1RRcTFMCjQvR3JjaUNpcGUyOEphd29ORDBmYVhsM3hVYmlJaTYxV2MzVVJwZW52ZVJwL1E0Y1RlY0tyVGxWTVhkVm5OMGgKTmorVSs3cHhqMm9NcjhGNk55US9KRTRnS2w1a3QyK1dkeVJybUttZUl0YUxPc2JxUUNZRlZWV0JWYng2eldmUApBTW1BUTM1di9YaHZLTDV3Wm9wdWgyZ0xLUmZkczEyTUI0U3FLYnR6MUdoRkN0R2NyeXBCZ082LzFmOGN6bjNSCkw1RU90QjBENWoxeE5YUFFIUjkrcURyN3pWTE1qNUlsMTRhUE9YRUEyN09sOTJQNVBxcWd6aHFSZEk4Q0F3RUEKQVFLQ0FnQW1FMFFEcmd4OGM3UDdGZDRIRWVlMSszYlh3UnA4VlVhcnJockpFWUlpaGRTVWtEN2tRdkt6T0RvUApXa3NFT3VlREg1bnhXWmZab1ErcXNBVGVQNXZJWnI5WEJEMmEzcWN2OHd4blQxclJ0anQzNWFrYjU4SllwbzhNClZ3RzdRNVhVKzRLSnRCNHBtd0hPSjVCZUJYSTRUemdBTXd1cnVvalhGQ2lNcTUvVmVCdFZyZTIrNFdkWHpqcEMKSThHcWVhalBieFhudFcxVTczUnkrWU9LUk9KMEFtUEpJeVNMUVAva3Vabi9WRk1JSmxaMlJBMTRRQTF3VWxpVApVMzQxVXRPVEhPaHhwdzRLRlFqZENML1lMcy83aTdEQnZJamMzeVY1VytMNlZkdVJ0OXJ5Q2d5ZVBSZWZkYSs4CnNZL3BmNWFFWkJSQnRzU2puMmNTOGRscW9UekVqVDVGRDVuSkIvTmUyZXZRSXEzaFlGSk9mTi85K0l2d216VmcKa09HeTVWM3RmUHRYblphbDdGaGl5TENjM1hyVTNxc0xsaTI0UVpxNGNEdTFIMDBSaWVhVzIxS2VaMHVDZzVBZApXNU9uRHYrcDljWXZWb2xvbklLZ2RkWmFuZmFtRDZ4dEhyKytacjJtcWRCUkZDMlpsM0xUU0ErUWsyK2xqc0JxCllBdENjUmgxbllhU0htRFdUNGpWYVQxTzNaRnpIaXlRNmdWZTlHa1JEQ2NTR29GcXpSS01XRXh6Ukxaa1Yra2UKamVLRkNaQmJVeE9PblkxQWxVWVdKUi9PTEJGeUp6TUlaQnJMaU84aFZHYklvVWFLS09HZTd5ZnNFSWl5K3lCagp3T25mMjVJVTYrNkpQSm4vc3diZGhQTEYrc1lMRUZPN3lWdk9udTNKRVorK01LNnZNUUtDQVFFQTVGaEsrN0R1ClVKYzVvQTcreHdHMGI3ZzEvRFBPbWxQVEQwM3c0RVlFakJrVVBiUGU2SWVEbWYxRFQ4eVlVdDZEeU53NmFwU2wKU3FkSkR5M3VIR1dEeVFlbGg1OTBHNXE1Qm1GMUNTNHNURVROWHN1cWJvZWU3RjN1dWlWaEY2bHp0WXNnUEppTwo4WmxYZ2dxY1VUdjBKdlU0UWtMODlHYmlFTGpDR2Ftczd1S0FrcnRmRnhHVDZaTVJyckkwSmI4eE40aTRMK0czCnhtUWlRNFhucllOaVZnZ0NuOWg0bWJHMXVoSFR3eEljaDNBOVc0cnk5Zkhuc2xXS3hOaU03WG5QNzhNTVN6K2kKL3ZyTm9yZHliL2RDVVNBTUJkamdRTDRmN3ZpRUJqK0NEdVc5cUtkSmkzU0xMVHFHN1l1ZUxvRWVicm1GblJ1QwphZmR3WCtUN1kzUk9PUUtDQVFFQXo0eURDdlkrRm1rbC9FVzdnMWxwQTAvSmRnbjg5c21CZkQ4VEtycHI1V0FTCmd2QzZLWHZXa1ZXWHhJaEF0czdiWVRzRldJZ1NlNUlEUjZLUjB2OHBoK1dDankvWjZUWWZlSVdDTDhQRWtDSncKVVlPUk9CYU13MEZzaE55S2FvUGNNOVBJazBWUnphZFlMWmw0ZHAvYzNuMVMzanpHZ01EelR6MzVuV09xb2poNApvbGFyZ0F2SVlXekNvOE14bVp1OEVIeTNGYS9iRGpLMlFlbnowOHc5MTIyZVEvenI4NGYxSXpVbU5yaFR3ZzVvClNYc1I2SHRCRlM1TURTN2VHRUFOcVZSZk54Tkc1Umx6NmVGZFZQOHNER3dZNDRiNk14dllpWVk2dmxCYjZBREIKZHg0VFpaRXFzTVpaQmRhbzFxMStZOENHZXExVDI5SDdsTTdiYkwzWkJ3S0NBUUFTT0EwN2ljRnFBcmJoVTNEMgpsZWM4cHJqLzkyNDdtQWFXQ1FUNEQvNGE0NEZlN3ZRUkg0YmJpWDZPWm1lYzdRNGN2NTJWbFdpZXpUd2lEdXNaCnJ1dlY1VnRLdCtrK3JwaW1ycTMwM285QVFwa1VRREhJQWVBblFkTmpYTW9qWml6S1JtQjdGVDBLZjg2Z25KSWUKVlNkRTJIbjFwM3loVDNnb0YyVzlRSEdBMmVlaVRYcm56MG82NzdZUWR6MTc2WVpXeFB6VkxUQkpqd0hBMjNWQgp2ZUxodEYvcE93OWNTL2FROHcwdldrbVdjTmtrYmJDMitPY2dybnlVK2lZOGFHU3ozNThpZmVCV2NkSm9jalNhClJHTXhMOXBsdVFramdVZncvRGtrZW5xNUQ1R1RYRTJjNTk2VzdEMkp4SU1KZU5uaHdjR3NhRjUrYi9TeVlnWEEKeUszWkFvSUJBUUM0Y0tZRGw5Q1ZHZHduMDlCUGFhVm95LzY4WnlQbUxDeGx2YWZLME9BUmRzNzhqZkRoN0t0QgpmRTdpMkRLcVFpbXl2a0NCN0dxQVpjR0VaM1F2alpIYXNwclRwREtDalJacWhEcXROOHYyU3FTRnkrWEJja2lsCk8vNjBFMGp1WHovUXp1UHYvQ28yR0FERWhSNElUUWg2citSMG1vM00zYXRiUURnVEpmNzlLaklLRWZ0V1R5SkQKY2VPR3BHL3ZrZllPc01ZQy84UXJXZVdkcmNxQTdZQUhjZUt6aUpBbVd5djluYjNYNHZhTC9VR3dDeTVlNnlscgpLVGxzZmJuZzB3dFE3eW11Ui9NNHBPWGRjZWovSDhTRlJZcllwNXF3MEk0ZHFLdUxkTjQzem5RZTV4dFZweXZJCjdIc3dOUkxWdEZnZFRYbzBpdE43QmFBTkhjYmhXOVVCQW9JQkFGSTFpenRHc2duYVV1Zk1TOGVkQkpab3poeWEKQ1RwL3lTbmUySDJHcytzQlBRVExhYTMyZG44TkUxb2VMTWFMMFFEZG00L3hudForSzhrYThnOUFUa3czY2R4ego4V2RGdEV4Qzh4TEFIcldrWUFuNzdxbEZISUk2SEYxRGhQWDNhdGV0THZuRUdkVmVraEVnVGZTcWZpd2ZmODBJCjd1bGhzY0N4WXc0S2hJMUdWdVRKWG8rSStseVdMNUw3c2NMNTRkbDVuaFNPcXU0eHdWNkNKMTBRT2doTVpQRkkKK3lSZE05UmVZb3Bma2hpYnp4QXU2ditxbkNlL0J0dU1tVUtYZG1HM3l3UDVSY0pMRTUyNmhDSklGSitESzlKZQpZeFhiSEVBYjJYOStRNWZiSzJXRWp0UENFdTFPeUlpZGJOYU5HRVNMUitKak1GeFRTeUlKcjR4WHRjVT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQUtGSittdmNFR1dWbDVnSHluVTRBMWt3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpFd056SXdNREUxT0RFeFdoZ1BNakExTVRBM01qQXdNakE0TVRGYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCnE0OVFtWU0xNDhsK2VzelJmbC9uWkpjblQzd296cW9KQzdJVDdOOGJxK1JUK2lvcHFXZVUzY3dnTm5PS0ZwM0IKKy8yOXpGWTBqVzZZRXVTUEVpSWFxak9KL0xaUUwyU0t5bytOUTVsV0lpaEQrREM1aEtVZDNLTnJXbDZKRjRRYgpCaDZlT1FKUkFpRXlTNi9uNkY4c1daOWNHTERmcjZkSGkveTRHazhoM085c0NYTDV0d3ZGUVcxeklrRlR1ZUFxCmZVRlk2VjUvTWcrcWFZZS9QY1VhRm1PWHpTY1Y5RUpoZVorRjYxQU5sVG9CVEt0YU1IMHkyNFYzYjNYVEVwSjYKblMxSzI4ejFqa2ErVEpXQ1BrU1RCaEdvYzArYVF4LzVlTDY1RnVFS3FkZDlQcTJnd3p0bVhOTkx6Smpra3BRVQp5VmVnUWFFRUk3Sk5hZFZkb3RVdm5ENXJLcElCZ2VXYUtuVmdlMHBwNlRiWEFBUFJPNS9YWEl5WkV0RUlVbVcvCmJUdzdUeXZ5MEkxdVNQOU9BRXhQbGVNRzBiK2Vvakg4Y1NzMk80T3FscmlrbTRHSDFTdFRkc3VFaTRXd1JNQlMKT1lGOXBCUVkzTUFFVTN1Z04yVEczbUlVUVA2cmxiQWRIVU16VE52NHo5Q3VjbjAzbG5JQVdQQ0dmb2hLdzliUgo1STJUTy9UV1BLMkQrcmh6S2w4VzN6WmhVQ0doN2R6VE9jTGZ4NC9aTVA1b1B4RDRRRThBZ1dpTW9PMVpuV2R4CmZYdjdhOWYrVVdrb3psNU1oLy9zOTNEZ09rNlhGdVF0QTM5MWJNYWVuejZGcVVuRjZrZnd0QVFMUWs3T1h6a2YKUE5FNGtGZk5yY1hseDBneHNWSTVrMWNNL0lYQjRMZGl4MkFYenVGcjBtRUNBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSG9lY1hwZWQ0TmJodUZiClhFM3lmaXMxTWg1OU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQmxwNWhiRGd0bWpMNVREeVlFUk5lM25RdUkKYjhPYnVPUjE3K2xOUnRpNHBxeEdwZWVjSXhicWUwZFc0d1V4NU9mVUtJa3BOTVA1NlFHWGRoRE5aK3V4b0VrZwpoczRvVy9vYzdoUlkvVkhRZGExcmgra0ZNczdseWdrUFdQbmZWWThrbXROczRLT2EzVjBLWi9TS0JzV2RrcW9mCnVGeTdIZm1rOGtrVlpDcWVBcEtnaFI4eEtKMk5jMnNtV1RJb3FvN0J5WVlJOU9JZ3FkUzJVQ1FSOFVkVzNTNkQKdlQxTnRmWGFRMDMvYWVZV1pZTHIrMFh2Szh5aTVZczY3OXJqbVYyazg5SC9sVjZON2FCLzUveVI1aEdRUUtmNwpsaVB6LzZqUHlFNjRFeHJvUVVycVNyNWJXSmwvVFBCOENuaHg2LzVkRXE1MVdJSUFRZXR6NkdRY1pNLzRVT0YzClp5YllSdStjYjZCT2hsOVRYMnJ2ZW9oYjRSUzNKSDhsR1h5SHhZSGxYUFFsdWJVVHZvaG4zNHhPOTRUdngvVEUKN1JqZERsaVhRWjFRbXJYRUlJcHVxcTdtSEZIMWdKYVJPYzBKUWdyQVlPV2ZiWDU5Y3padlI3SHlra01kK0UwMApDemIvNUNPVU1icTVxQ1orNWRUcUVyc3VINXRFZHdwdC9ZaDZhMk5PZFlwMVR0Q1I2S2VCeXIxMnFSb1FiK0c2CmhpUHBWbXU3WmI5Rkhqc0FnQUh1SFo0QTFqMHNWODZOc0ZWQzFiUkF3aTVKc0lZWmxXcnhQQmlONjhpU3B4MzgKNWUvVGZNQmlLR0tnMFRpZ0o2WG9QNkhmSFErdG9oNkpCU1hTOWswUmpnbWN6aWVmaDlQdFdOd29qUEpIRTEvSgpENkp2WWVYUm9oeWdPZXlvUmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "host": "https://k8stest-eff13102.hcp.centralus.azmk8s.io:443",
                "password": "19b152598520b04d4359e071c7af9d4d1e03776afd93ad72e69f5b255c85df05c13ff63afc3b9799525ccb62ddf6c809e11185c483375d58c65536b28c03511d",
                "username": "clusterUser_hcpResourceGroup_k8stest"
              }
            ],
            "kube_config_raw": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQUtGSittdmNFR1dWbDVnSHluVTRBMWt3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpFd056SXdNREUxT0RFeFdoZ1BNakExTVRBM01qQXdNakE0TVRGYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCnE0OVFtWU0xNDhsK2VzelJmbC9uWkpjblQzd296cW9KQzdJVDdOOGJxK1JUK2lvcHFXZVUzY3dnTm5PS0ZwM0IKKy8yOXpGWTBqVzZZRXVTUEVpSWFxak9KL0xaUUwyU0t5bytOUTVsV0lpaEQrREM1aEtVZDNLTnJXbDZKRjRRYgpCaDZlT1FKUkFpRXlTNi9uNkY4c1daOWNHTERmcjZkSGkveTRHazhoM085c0NYTDV0d3ZGUVcxeklrRlR1ZUFxCmZVRlk2VjUvTWcrcWFZZS9QY1VhRm1PWHpTY1Y5RUpoZVorRjYxQU5sVG9CVEt0YU1IMHkyNFYzYjNYVEVwSjYKblMxSzI4ejFqa2ErVEpXQ1BrU1RCaEdvYzArYVF4LzVlTDY1RnVFS3FkZDlQcTJnd3p0bVhOTkx6Smpra3BRVQp5VmVnUWFFRUk3Sk5hZFZkb3RVdm5ENXJLcElCZ2VXYUtuVmdlMHBwNlRiWEFBUFJPNS9YWEl5WkV0RUlVbVcvCmJUdzdUeXZ5MEkxdVNQOU9BRXhQbGVNRzBiK2Vvakg4Y1NzMk80T3FscmlrbTRHSDFTdFRkc3VFaTRXd1JNQlMKT1lGOXBCUVkzTUFFVTN1Z04yVEczbUlVUVA2cmxiQWRIVU16VE52NHo5Q3VjbjAzbG5JQVdQQ0dmb2hLdzliUgo1STJUTy9UV1BLMkQrcmh6S2w4VzN6WmhVQ0doN2R6VE9jTGZ4NC9aTVA1b1B4RDRRRThBZ1dpTW9PMVpuV2R4CmZYdjdhOWYrVVdrb3psNU1oLy9zOTNEZ09rNlhGdVF0QTM5MWJNYWVuejZGcVVuRjZrZnd0QVFMUWs3T1h6a2YKUE5FNGtGZk5yY1hseDBneHNWSTVrMWNNL0lYQjRMZGl4MkFYenVGcjBtRUNBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSG9lY1hwZWQ0TmJodUZiClhFM3lmaXMxTWg1OU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQmxwNWhiRGd0bWpMNVREeVlFUk5lM25RdUkKYjhPYnVPUjE3K2xOUnRpNHBxeEdwZWVjSXhicWUwZFc0d1V4NU9mVUtJa3BOTVA1NlFHWGRoRE5aK3V4b0VrZwpoczRvVy9vYzdoUlkvVkhRZGExcmgra0ZNczdseWdrUFdQbmZWWThrbXROczRLT2EzVjBLWi9TS0JzV2RrcW9mCnVGeTdIZm1rOGtrVlpDcWVBcEtnaFI4eEtKMk5jMnNtV1RJb3FvN0J5WVlJOU9JZ3FkUzJVQ1FSOFVkVzNTNkQKdlQxTnRmWGFRMDMvYWVZV1pZTHIrMFh2Szh5aTVZczY3OXJqbVYyazg5SC9sVjZON2FCLzUveVI1aEdRUUtmNwpsaVB6LzZqUHlFNjRFeHJvUVVycVNyNWJXSmwvVFBCOENuaHg2LzVkRXE1MVdJSUFRZXR6NkdRY1pNLzRVT0YzClp5YllSdStjYjZCT2hsOVRYMnJ2ZW9oYjRSUzNKSDhsR1h5SHhZSGxYUFFsdWJVVHZvaG4zNHhPOTRUdngvVEUKN1JqZERsaVhRWjFRbXJYRUlJcHVxcTdtSEZIMWdKYVJPYzBKUWdyQVlPV2ZiWDU5Y3padlI3SHlra01kK0UwMApDemIvNUNPVU1icTVxQ1orNWRUcUVyc3VINXRFZHdwdC9ZaDZhMk5PZFlwMVR0Q1I2S2VCeXIxMnFSb1FiK0c2CmhpUHBWbXU3WmI5Rkhqc0FnQUh1SFo0QTFqMHNWODZOc0ZWQzFiUkF3aTVKc0lZWmxXcnhQQmlONjhpU3B4MzgKNWUvVGZNQmlLR0tnMFRpZ0o2WG9QNkhmSFErdG9oNkpCU1hTOWswUmpnbWN6aWVmaDlQdFdOd29qUEpIRTEvSgpENkp2WWVYUm9oeWdPZXlvUmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://k8stest-eff13102.hcp.centralus.azmk8s.io:443\n  name: k8stest\ncontexts:\n- context:\n    cluster: k8stest\n    user: clusterUser_hcpResourceGroup_k8stest\n  name: k8stest\ncurrent-context: k8stest\nkind: Config\npreferences: {}\nusers:\n- name: clusterUser_hcpResourceGroup_k8stest\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIakNDQXdhZ0F3SUJBZ0lSQUphdlBIZzgwMzVhd1VSdjNad1A0dzh3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpFd056SXdNREUxT0RFeFdoY05Nak13TnpJd01ESXdPREV4V2pBdwpNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6RVZNQk1HQTFVRUF4TU1iV0Z6ZEdWeVkyeHBaVzUwCk1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBdVNDNXpYc3JhRXFjWEgyWmZ3b2oKU1ROUWZwQ215QkFDd01ubU1VV3JHcVZVN0VoUUtITjBhSU91TEJ0NFhZNDY0SmFyTjI0cERBb2c3YURXejNINQpnVGRSL0hXZENEcUpOcHVoblRKR2p2VWp3KzNjdmQyWElaT3k4Z3FqSE4vbmpHWXJxdmJKUFVYbWRVa21hZm1DClYwZG1FdHhGeXcyRHRLZ2RWeFY5ZDEzbExiTnpBOWJkMFVVdzMrd0VKUStBMk5FRTI3RlFsNU04dWlueCtycG4KKzJIQUkyRzEzRnlENnE1SitYa0NGRVdqWGJNbXUwSE5tZHF0Z21LR04zQ1Y3UHFLYlpQR1hEOTlyTHJBUW9ZMApSakNxSDczMGw5MUFFa0kyMnNXRkw3ZWMrSmZET3IwQ3c2K0lVUUk3enYxbCtHb1JBMnRMbmRqMjhublRKaGVuCk8wNmtMZGM1enI3SzNpbk12Zzl4QTdNSHE5MGFNMGF6UW8vaGZYeHBOM2VNS1AzdHRpQ3BUS3BaOWlCTjQxbzgKMlFlakJRK0JnQmd0RVYzVFVVQndHNEtUUXExTDQvR3JjaUNpcGUyOEphd29ORDBmYVhsM3hVYmlJaTYxV2MzVQpScGVudmVScC9RNGNUZWNLclRsVk1YZFZuTjBoTmorVSs3cHhqMm9NcjhGNk55US9KRTRnS2w1a3QyK1dkeVJyCm1LbWVJdGFMT3NicVFDWUZWVldCVmJ4NnpXZlBBTW1BUTM1di9YaHZLTDV3Wm9wdWgyZ0xLUmZkczEyTUI0U3EKS2J0ejFHaEZDdEdjcnlwQmdPNi8xZjhjem4zUkw1RU90QjBENWoxeE5YUFFIUjkrcURyN3pWTE1qNUlsMTRhUApPWEVBMjdPbDkyUDVQcXFnemhxUmRJOENBd0VBQWFOV01GUXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkCkpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVZWg1eGVsNTMKZzF1RzRWdGNUZkorS3pVeUhuMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBRjc1RUFLMENJUlI2YzFVK2t5cwp3Z0ZtakRiUERaL1NhNDN5d081THJ3NTQrdG5XeTNTeVZuMmM1bFQ0ZlZUZUJ2QTM2alhVcW1FcEJiWWUwc2F5CjRzSFJyUFhYUjNFS2tGMGxHek1oMDA5RFM1TWQrMzdRSHhGSytpbFdJVDBQWFIwQUZGekIyZW5hYmtyMENON1YKOVZiUlE1NUJVb21QZ2x3NlozUW5GRGJkV2tFWXNWVCttM3J2YWlsbEFrWVQ3OUw0a1NWOXVjaGdvbFg0MDcwMgpqa1NOUzYyK2FwTHp4YXRYUjhzQWdjVXc0OHRZSkdoWVRLV3lqZEVwU25CeUV3bVMzcExlYjhaRWM3OHFJZkdXCjkvSjNBYnI2TC85azh3NVhoNzJJRVJQMzFTSlZzNkFvUmV6TU5yajdPZndLK25Pb0FkSGlsTHN2WlFLbXhXS2wKaFo5Mk9TWjdzYnhZMmFlVmRFZDRJS2d5VFVBcFg3a1B4ME82anRnbnEvbU9hc2hFWWNNTXo5SFN0akxFUjJVUQpvVERzSzlRcm50Q2dtS3BuN1J0Tlk4MFIxUzFMZFZpQ3JnZHMxTU1nVko3SXFyRnduK1RlNElSNU42M0U5YTRyCnp6SFNLL2dwU3ZmTTZCN0p0ZUVrM2Rac2JaU0c5QTJYM3BUdEx3NTVlN2dWbHJPbmhDb2VyR3pGTHhDQURSZDgKNmtLR2Y4UjF2RlZwVGcydUJPZFUxU1RXdU5HaG9sRmhjTnBabThZUHYrQ0ZkUk5nbnBPQjdnM1o0enNmQjNUdQpNRHFuQ2FVNjczb0dISFFwaWxsbG8zR1ZjclpNL2M2M3JLdjVETnlSZTRFMG1GdnFCTjFPR1BrNVgzOVdBZWNGCkpYQW5MYnNIc3R2VE12Yi9NbDVHR0xQcwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBdVNDNXpYc3JhRXFjWEgyWmZ3b2pTVE5RZnBDbXlCQUN3TW5tTVVXckdxVlU3RWhRCktITjBhSU91TEJ0NFhZNDY0SmFyTjI0cERBb2c3YURXejNINWdUZFIvSFdkQ0RxSk5wdWhuVEpHanZVancrM2MKdmQyWElaT3k4Z3FqSE4vbmpHWXJxdmJKUFVYbWRVa21hZm1DVjBkbUV0eEZ5dzJEdEtnZFZ4VjlkMTNsTGJOegpBOWJkMFVVdzMrd0VKUStBMk5FRTI3RlFsNU04dWlueCtycG4rMkhBSTJHMTNGeUQ2cTVKK1hrQ0ZFV2pYYk1tCnUwSE5tZHF0Z21LR04zQ1Y3UHFLYlpQR1hEOTlyTHJBUW9ZMFJqQ3FINzMwbDkxQUVrSTIyc1dGTDdlYytKZkQKT3IwQ3c2K0lVUUk3enYxbCtHb1JBMnRMbmRqMjhublRKaGVuTzA2a0xkYzV6cjdLM2luTXZnOXhBN01IcTkwYQpNMGF6UW8vaGZYeHBOM2VNS1AzdHRpQ3BUS3BaOWlCTjQxbzgyUWVqQlErQmdCZ3RFVjNUVVVCd0c0S1RRcTFMCjQvR3JjaUNpcGUyOEphd29ORDBmYVhsM3hVYmlJaTYxV2MzVVJwZW52ZVJwL1E0Y1RlY0tyVGxWTVhkVm5OMGgKTmorVSs3cHhqMm9NcjhGNk55US9KRTRnS2w1a3QyK1dkeVJybUttZUl0YUxPc2JxUUNZRlZWV0JWYng2eldmUApBTW1BUTM1di9YaHZLTDV3Wm9wdWgyZ0xLUmZkczEyTUI0U3FLYnR6MUdoRkN0R2NyeXBCZ082LzFmOGN6bjNSCkw1RU90QjBENWoxeE5YUFFIUjkrcURyN3pWTE1qNUlsMTRhUE9YRUEyN09sOTJQNVBxcWd6aHFSZEk4Q0F3RUEKQVFLQ0FnQW1FMFFEcmd4OGM3UDdGZDRIRWVlMSszYlh3UnA4VlVhcnJockpFWUlpaGRTVWtEN2tRdkt6T0RvUApXa3NFT3VlREg1bnhXWmZab1ErcXNBVGVQNXZJWnI5WEJEMmEzcWN2OHd4blQxclJ0anQzNWFrYjU4SllwbzhNClZ3RzdRNVhVKzRLSnRCNHBtd0hPSjVCZUJYSTRUemdBTXd1cnVvalhGQ2lNcTUvVmVCdFZyZTIrNFdkWHpqcEMKSThHcWVhalBieFhudFcxVTczUnkrWU9LUk9KMEFtUEpJeVNMUVAva3Vabi9WRk1JSmxaMlJBMTRRQTF3VWxpVApVMzQxVXRPVEhPaHhwdzRLRlFqZENML1lMcy83aTdEQnZJamMzeVY1VytMNlZkdVJ0OXJ5Q2d5ZVBSZWZkYSs4CnNZL3BmNWFFWkJSQnRzU2puMmNTOGRscW9UekVqVDVGRDVuSkIvTmUyZXZRSXEzaFlGSk9mTi85K0l2d216VmcKa09HeTVWM3RmUHRYblphbDdGaGl5TENjM1hyVTNxc0xsaTI0UVpxNGNEdTFIMDBSaWVhVzIxS2VaMHVDZzVBZApXNU9uRHYrcDljWXZWb2xvbklLZ2RkWmFuZmFtRDZ4dEhyKytacjJtcWRCUkZDMlpsM0xUU0ErUWsyK2xqc0JxCllBdENjUmgxbllhU0htRFdUNGpWYVQxTzNaRnpIaXlRNmdWZTlHa1JEQ2NTR29GcXpSS01XRXh6Ukxaa1Yra2UKamVLRkNaQmJVeE9PblkxQWxVWVdKUi9PTEJGeUp6TUlaQnJMaU84aFZHYklvVWFLS09HZTd5ZnNFSWl5K3lCagp3T25mMjVJVTYrNkpQSm4vc3diZGhQTEYrc1lMRUZPN3lWdk9udTNKRVorK01LNnZNUUtDQVFFQTVGaEsrN0R1ClVKYzVvQTcreHdHMGI3ZzEvRFBPbWxQVEQwM3c0RVlFakJrVVBiUGU2SWVEbWYxRFQ4eVlVdDZEeU53NmFwU2wKU3FkSkR5M3VIR1dEeVFlbGg1OTBHNXE1Qm1GMUNTNHNURVROWHN1cWJvZWU3RjN1dWlWaEY2bHp0WXNnUEppTwo4WmxYZ2dxY1VUdjBKdlU0UWtMODlHYmlFTGpDR2Ftczd1S0FrcnRmRnhHVDZaTVJyckkwSmI4eE40aTRMK0czCnhtUWlRNFhucllOaVZnZ0NuOWg0bWJHMXVoSFR3eEljaDNBOVc0cnk5Zkhuc2xXS3hOaU03WG5QNzhNTVN6K2kKL3ZyTm9yZHliL2RDVVNBTUJkamdRTDRmN3ZpRUJqK0NEdVc5cUtkSmkzU0xMVHFHN1l1ZUxvRWVicm1GblJ1QwphZmR3WCtUN1kzUk9PUUtDQVFFQXo0eURDdlkrRm1rbC9FVzdnMWxwQTAvSmRnbjg5c21CZkQ4VEtycHI1V0FTCmd2QzZLWHZXa1ZXWHhJaEF0czdiWVRzRldJZ1NlNUlEUjZLUjB2OHBoK1dDankvWjZUWWZlSVdDTDhQRWtDSncKVVlPUk9CYU13MEZzaE55S2FvUGNNOVBJazBWUnphZFlMWmw0ZHAvYzNuMVMzanpHZ01EelR6MzVuV09xb2poNApvbGFyZ0F2SVlXekNvOE14bVp1OEVIeTNGYS9iRGpLMlFlbnowOHc5MTIyZVEvenI4NGYxSXpVbU5yaFR3ZzVvClNYc1I2SHRCRlM1TURTN2VHRUFOcVZSZk54Tkc1Umx6NmVGZFZQOHNER3dZNDRiNk14dllpWVk2dmxCYjZBREIKZHg0VFpaRXFzTVpaQmRhbzFxMStZOENHZXExVDI5SDdsTTdiYkwzWkJ3S0NBUUFTT0EwN2ljRnFBcmJoVTNEMgpsZWM4cHJqLzkyNDdtQWFXQ1FUNEQvNGE0NEZlN3ZRUkg0YmJpWDZPWm1lYzdRNGN2NTJWbFdpZXpUd2lEdXNaCnJ1dlY1VnRLdCtrK3JwaW1ycTMwM285QVFwa1VRREhJQWVBblFkTmpYTW9qWml6S1JtQjdGVDBLZjg2Z25KSWUKVlNkRTJIbjFwM3loVDNnb0YyVzlRSEdBMmVlaVRYcm56MG82NzdZUWR6MTc2WVpXeFB6VkxUQkpqd0hBMjNWQgp2ZUxodEYvcE93OWNTL2FROHcwdldrbVdjTmtrYmJDMitPY2dybnlVK2lZOGFHU3ozNThpZmVCV2NkSm9jalNhClJHTXhMOXBsdVFramdVZncvRGtrZW5xNUQ1R1RYRTJjNTk2VzdEMkp4SU1KZU5uaHdjR3NhRjUrYi9TeVlnWEEKeUszWkFvSUJBUUM0Y0tZRGw5Q1ZHZHduMDlCUGFhVm95LzY4WnlQbUxDeGx2YWZLME9BUmRzNzhqZkRoN0t0QgpmRTdpMkRLcVFpbXl2a0NCN0dxQVpjR0VaM1F2alpIYXNwclRwREtDalJacWhEcXROOHYyU3FTRnkrWEJja2lsCk8vNjBFMGp1WHovUXp1UHYvQ28yR0FERWhSNElUUWg2citSMG1vM00zYXRiUURnVEpmNzlLaklLRWZ0V1R5SkQKY2VPR3BHL3ZrZllPc01ZQy84UXJXZVdkcmNxQTdZQUhjZUt6aUpBbVd5djluYjNYNHZhTC9VR3dDeTVlNnlscgpLVGxzZmJuZzB3dFE3eW11Ui9NNHBPWGRjZWovSDhTRlJZcllwNXF3MEk0ZHFLdUxkTjQzem5RZTV4dFZweXZJCjdIc3dOUkxWdEZnZFRYbzBpdE43QmFBTkhjYmhXOVVCQW9JQkFGSTFpenRHc2duYVV1Zk1TOGVkQkpab3poeWEKQ1RwL3lTbmUySDJHcytzQlBRVExhYTMyZG44TkUxb2VMTWFMMFFEZG00L3hudForSzhrYThnOUFUa3czY2R4ego4V2RGdEV4Qzh4TEFIcldrWUFuNzdxbEZISUk2SEYxRGhQWDNhdGV0THZuRUdkVmVraEVnVGZTcWZpd2ZmODBJCjd1bGhzY0N4WXc0S2hJMUdWdVRKWG8rSStseVdMNUw3c2NMNTRkbDVuaFNPcXU0eHdWNkNKMTBRT2doTVpQRkkKK3lSZE05UmVZb3Bma2hpYnp4QXU2ditxbkNlL0J0dU1tVUtYZG1HM3l3UDVSY0pMRTUyNmhDSklGSitESzlKZQpZeFhiSEVBYjJYOStRNWZiSzJXRWp0UENFdTFPeUlpZGJOYU5HRVNMUitKak1GeFRTeUlKcjR4WHRjVT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    token: 19b152598520b04d4359e071c7af9d4d1e03776afd93ad72e69f5b255c85df05c13ff63afc3b9799525ccb62ddf6c809e11185c483375d58c65536b28c03511d\n",
            "kubelet_identity": [],
            "kubernetes_version": "1.19.11",
            "linux_profile": [
              {
                "admin_username": "ubuntu",
                "ssh_key": [
                  {
                    "key_data": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFUL2IJgCDbZX/20U0Kw1xCPMmYjGIZkd4yUavDj9z8djh9BdwxSYNHkb69/V7OTX74aA7IUnUnJkUlGC1CEIDRkXAzDegRLKl40ijvijKUm5fwazySbbKLcx3zIaNR7vVaFj+d6/TqfM5W02bxYR9KS5B1mbCUf9m2goF6KwgIA26U36X937jrSQl+rJPt+/PDow1PVKTCbw+Breza8+R2VBRY4vlCDN5uPlBQnsZDELu3bXqhsytJnlyQwKLkz1IsMyO/p/3mhP/o59Me3np9SBA3zakODpFoesLCb0W3SHWO+0fnPN46mfqA9hzv0jOKPjEusCIR0nAMyr9EzEAs8eqvDptNfnKbJaN1UWP9WfM/vfmTGN5EzM/R5QZsF6h+0cAomFtC2pcDCbesU1G3LeGfr16c2Hv2bWDzTFtMLDPJIwWvTgvBZ2Q0h2ggE5Uo7IQFGCYa2Huh8lzWJwXjWTGVEnkBEWn6e0+0vK+gU9no+z5SqFhJj7flvH8VQoLY+rnB9S+KQpfp5tVcbNQF0LiEunjqyvaovapcvY+RjE4TdEqjCEYG0eoLrM3WFk9+X1pSK6j4Y64PSXr6DIqw6mkRZU92Ay5+VKYnnvt2Xtjfbc+YePfbWu540xJ+ft9MgadXrT9v83232FkaFscSfM4RFIHd8QKkhCc89Ce5Q== root@master\n"
                  }
                ]
              }
            ],
            "location": "centralus",
            "name": "k8stest",
            "network_profile": [
              {
                "dns_service_ip": "10.0.0.10",
                "docker_bridge_cidr": "172.17.0.1/16",
                "load_balancer_sku": "Standard",
                "network_plugin": "kubenet",
                "network_policy": "",
                "pod_cidr": "10.244.0.0/16",
                "service_cidr": "10.0.0.0/16"
              }
            ],
            "node_resource_group": "MC_hcpResourceGroup_k8stest_centralus",
            "private_cluster_enabled": false,
            "private_fqdn": "",
            "private_link_enabled": false,
            "resource_group_name": "hcpResourceGroup",
            "role_based_access_control": [
              {
                "azure_active_directory": [],
                "enabled": false
              }
            ],
            "service_principal": [
              {
                "client_id": "89a4f9a8-86ff-43bf-80ca-48296fc31897"
              }
            ],
            "tags": {
              "Environment": "Development"
            },
            "timeouts": null,
            "windows_profile": []
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubernetes_secret",
      "name": "secretData",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"].azureCluster",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": null,
            "id": null,
            "metadata": null,
            "type": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "hcp",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"].azureCluster",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aggregation_rule": [],
            "id": "terraform-example",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "terraform-example",
                "resource_version": "39827",
                "uid": "28b93745-7b15-4002-8616-70efeb3f06ff"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "namespaces"
                ],
                "verbs": [
                  "get",
                  "list",
                  "update",
                  "create",
                  "patch"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.azurerm_kubernetes_cluster.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "hcp",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"].azureCluster",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "terraform-example",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "terraform-example",
                "resource_version": "39834",
                "uid": "35d881ee-4dab-46c3-8f0b-bb4f49f275a8"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "terraform-example"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "k8stest",
                "namespace": "kube-federation-system"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.azurerm_kubernetes_cluster.main",
            "kubernetes_cluster_role.hcp",
            "kubernetes_namespace.hcp",
            "kubernetes_service_account.hcp"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "kubefedcluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes-alpha\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "manifest": {
              "value": {
                "apiVersion": "apiextensions.k8s.io/v1",
                "kind": "CustomResourceDefinition",
                "metadata": {
                  "name": "kubefedclusters.core.kubefed.io"
                },
                "spec": {
                  "conversion": {
                    "strategy": "None"
                  },
                  "group": "core.kubefed.io",
                  "names": {
                    "kind": "KubeFedCluster",
                    "listKind": "KubeFedClusterList",
                    "plural": "kubefedclusters",
                    "singular": "kubefedcluster"
                  },
                  "scope": "Namespaced",
                  "versions": [
                    {
                      "additionalPrinterColumns": [
                        {
                          "jsonPath": ".metadata.creationTimestamp",
                          "name": "age",
                          "type": "date"
                        },
                        {
                          "jsonPath": ".status.conditions[?(@.type=='Ready')].status",
                          "name": "ready",
                          "type": "string"
                        }
                      ],
                      "name": "v1beta1",
                      "schema": {
                        "openAPIV3Schema": {
                          "properties": {
                            "apiVersion": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "properties": {
                                "apiEndpoint": {
                                  "type": "string"
                                },
                                "caBundle": {
                                  "format": "byte",
                                  "type": "string"
                                },
                                "disabledTLSValidations": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "proxyURL": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "apiEndpoint",
                                "secretRef"
                              ],
                              "type": "object"
                            },
                            "status": {
                              "properties": {
                                "conditions": {
                                  "items": {
                                    "properties": {
                                      "lastProbeTime": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "lastTransitionTime": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "message": {
                                        "type": "string"
                                      },
                                      "reason": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "lastProbeTime",
                                      "status",
                                      "type"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "region": {
                                  "type": "string"
                                },
                                "zones": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "conditions"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "spec"
                          ],
                          "type": "object"
                        }
                      },
                      "served": true,
                      "storage": true,
                      "subresources": {
                        "status": {}
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "conversion": [
                        "object",
                        {
                          "strategy": "string"
                        }
                      ],
                      "group": "string",
                      "names": [
                        "object",
                        {
                          "kind": "string",
                          "listKind": "string",
                          "plural": "string",
                          "singular": "string"
                        }
                      ],
                      "scope": "string",
                      "versions": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "additionalPrinterColumns": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "jsonPath": "string",
                                      "name": "string",
                                      "type": "string"
                                    }
                                  ]
                                ]
                              ],
                              "name": "string",
                              "schema": [
                                "object",
                                {
                                  "openAPIV3Schema": [
                                    "object",
                                    {
                                      "properties": [
                                        "object",
                                        {
                                          "apiVersion": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "kind": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "metadata": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "spec": [
                                            "object",
                                            {
                                              "properties": [
                                                "object",
                                                {
                                                  "apiEndpoint": [
                                                    "object",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "caBundle": [
                                                    "object",
                                                    {
                                                      "format": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "disabledTLSValidations": [
                                                    "object",
                                                    {
                                                      "items": [
                                                        "object",
                                                        {
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "proxyURL": [
                                                    "object",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "name": [
                                                            "object",
                                                            {
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "required": [
                                                        "tuple",
                                                        [
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "tuple",
                                                [
                                                  "string",
                                                  "string"
                                                ]
                                              ],
                                              "type": "string"
                                            }
                                          ],
                                          "status": [
                                            "object",
                                            {
                                              "properties": [
                                                "object",
                                                {
                                                  "conditions": [
                                                    "object",
                                                    {
                                                      "items": [
                                                        "object",
                                                        {
                                                          "properties": [
                                                            "object",
                                                            {
                                                              "lastProbeTime": [
                                                                "object",
                                                                {
                                                                  "format": "string",
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "lastTransitionTime": [
                                                                "object",
                                                                {
                                                                  "format": "string",
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "message": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "reason": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "status": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ]
                                                            }
                                                          ],
                                                          "required": [
                                                            "tuple",
                                                            [
                                                              "string",
                                                              "string",
                                                              "string"
                                                            ]
                                                          ],
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "region": [
                                                    "object",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "zones": [
                                                    "object",
                                                    {
                                                      "items": [
                                                        "object",
                                                        {
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "tuple",
                                                [
                                                  "string"
                                                ]
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "required": [
                                        "tuple",
                                        [
                                          "string"
                                        ]
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                }
                              ],
                              "served": "bool",
                              "storage": "bool",
                              "subresources": [
                                "object",
                                {
                                  "status": [
                                    "object",
                                    {}
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "apiextensions.k8s.io/v1",
                "kind": "CustomResourceDefinition",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "kubefedclusters.core.kubefed.io",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "conversion": {
                    "strategy": "None",
                    "webhook": {
                      "clientConfig": {
                        "caBundle": null,
                        "service": {
                          "name": null,
                          "namespace": null,
                          "path": null,
                          "port": null
                        },
                        "url": null
                      },
                      "conversionReviewVersions": null
                    }
                  },
                  "group": "core.kubefed.io",
                  "names": {
                    "categories": null,
                    "kind": "KubeFedCluster",
                    "listKind": "KubeFedClusterList",
                    "plural": "kubefedclusters",
                    "shortNames": null,
                    "singular": "kubefedcluster"
                  },
                  "preserveUnknownFields": null,
                  "scope": "Namespaced",
                  "versions": [
                    {
                      "additionalPrinterColumns": [
                        {
                          "description": null,
                          "format": null,
                          "jsonPath": ".metadata.creationTimestamp",
                          "name": "age",
                          "priority": null,
                          "type": "date"
                        },
                        {
                          "description": null,
                          "format": null,
                          "jsonPath": ".status.conditions[?(@.type=='Ready')].status",
                          "name": "ready",
                          "priority": null,
                          "type": "string"
                        }
                      ],
                      "name": "v1beta1",
                      "schema": {
                        "openAPIV3Schema": {
                          "properties": {
                            "apiVersion": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "properties": {
                                "apiEndpoint": {
                                  "type": "string"
                                },
                                "caBundle": {
                                  "format": "byte",
                                  "type": "string"
                                },
                                "disabledTLSValidations": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "proxyURL": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "apiEndpoint",
                                "secretRef"
                              ],
                              "type": "object"
                            },
                            "status": {
                              "properties": {
                                "conditions": {
                                  "items": {
                                    "properties": {
                                      "lastProbeTime": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "lastTransitionTime": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "message": {
                                        "type": "string"
                                      },
                                      "reason": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "lastProbeTime",
                                      "status",
                                      "type"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "region": {
                                  "type": "string"
                                },
                                "zones": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "conditions"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "spec"
                          ],
                          "type": "object"
                        }
                      },
                      "served": true,
                      "storage": true,
                      "subresources": {
                        "scale": {
                          "labelSelectorPath": null,
                          "specReplicasPath": null,
                          "statusReplicasPath": null
                        },
                        "status": {}
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "fieldsType": "string",
                            "fieldsV1": "dynamic",
                            "manager": "string",
                            "operation": "string",
                            "time": "string"
                          }
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "conversion": [
                        "object",
                        {
                          "strategy": "string",
                          "webhook": [
                            "object",
                            {
                              "clientConfig": [
                                "object",
                                {
                                  "caBundle": "string",
                                  "service": [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string",
                                      "path": "string",
                                      "port": "number"
                                    }
                                  ],
                                  "url": "string"
                                }
                              ],
                              "conversionReviewVersions": [
                                "list",
                                "string"
                              ]
                            }
                          ]
                        }
                      ],
                      "group": "string",
                      "names": [
                        "object",
                        {
                          "categories": [
                            "list",
                            "string"
                          ],
                          "kind": "string",
                          "listKind": "string",
                          "plural": "string",
                          "shortNames": [
                            "list",
                            "string"
                          ],
                          "singular": "string"
                        }
                      ],
                      "preserveUnknownFields": "bool",
                      "scope": "string",
                      "versions": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "additionalPrinterColumns": [
                                "list",
                                [
                                  "object",
                                  {
                                    "description": "string",
                                    "format": "string",
                                    "jsonPath": "string",
                                    "name": "string",
                                    "priority": "number",
                                    "type": "string"
                                  }
                                ]
                              ],
                              "name": "string",
                              "schema": [
                                "object",
                                {
                                  "openAPIV3Schema": [
                                    "object",
                                    {
                                      "properties": [
                                        "object",
                                        {
                                          "apiVersion": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "kind": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "metadata": [
                                            "object",
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "spec": [
                                            "object",
                                            {
                                              "properties": [
                                                "object",
                                                {
                                                  "apiEndpoint": [
                                                    "object",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "caBundle": [
                                                    "object",
                                                    {
                                                      "format": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "disabledTLSValidations": [
                                                    "object",
                                                    {
                                                      "items": [
                                                        "object",
                                                        {
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "proxyURL": [
                                                    "object",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "properties": [
                                                        "object",
                                                        {
                                                          "name": [
                                                            "object",
                                                            {
                                                              "type": "string"
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "required": [
                                                        "tuple",
                                                        [
                                                          "string"
                                                        ]
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "tuple",
                                                [
                                                  "string",
                                                  "string"
                                                ]
                                              ],
                                              "type": "string"
                                            }
                                          ],
                                          "status": [
                                            "object",
                                            {
                                              "properties": [
                                                "object",
                                                {
                                                  "conditions": [
                                                    "object",
                                                    {
                                                      "items": [
                                                        "object",
                                                        {
                                                          "properties": [
                                                            "object",
                                                            {
                                                              "lastProbeTime": [
                                                                "object",
                                                                {
                                                                  "format": "string",
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "lastTransitionTime": [
                                                                "object",
                                                                {
                                                                  "format": "string",
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "message": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "reason": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "status": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ],
                                                              "type": [
                                                                "object",
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ]
                                                            }
                                                          ],
                                                          "required": [
                                                            "tuple",
                                                            [
                                                              "string",
                                                              "string",
                                                              "string"
                                                            ]
                                                          ],
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "region": [
                                                    "object",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "zones": [
                                                    "object",
                                                    {
                                                      "items": [
                                                        "object",
                                                        {
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "type": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "tuple",
                                                [
                                                  "string"
                                                ]
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "required": [
                                        "tuple",
                                        [
                                          "string"
                                        ]
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                }
                              ],
                              "served": "bool",
                              "storage": "bool",
                              "subresources": [
                                "object",
                                {
                                  "scale": [
                                    "object",
                                    {
                                      "labelSelectorPath": "string",
                                      "specReplicasPath": "string",
                                      "statusReplicasPath": "string"
                                    }
                                  ],
                                  "status": [
                                    "map",
                                    "string"
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "hcp",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"].azureCluster",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-federation-system",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "kube-federation-system",
                "resource_version": "39826",
                "uid": "e7bbb77f-8a72-45b2-8f4e-0330025aa6ae"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.azurerm_kubernetes_cluster.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "hcp",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"].azureCluster",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIE6TCCAtGgAwIBAgIRAKFJ+mvcEGWVl5gHynU4A1kwDQYJKoZIhvcNAQELBQAw\nDTELMAkGA1UEAxMCY2EwIBcNMjEwNzIwMDE1ODExWhgPMjA1MTA3MjAwMjA4MTFa\nMA0xCzAJBgNVBAMTAmNhMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\nq49QmYM148l+eszRfl/nZJcnT3wozqoJC7IT7N8bq+RT+iopqWeU3cwgNnOKFp3B\n+/29zFY0jW6YEuSPEiIaqjOJ/LZQL2SKyo+NQ5lWIihD+DC5hKUd3KNrWl6JF4Qb\nBh6eOQJRAiEyS6/n6F8sWZ9cGLDfr6dHi/y4Gk8h3O9sCXL5twvFQW1zIkFTueAq\nfUFY6V5/Mg+qaYe/PcUaFmOXzScV9EJheZ+F61ANlToBTKtaMH0y24V3b3XTEpJ6\nnS1K28z1jka+TJWCPkSTBhGoc0+aQx/5eL65FuEKqdd9Pq2gwztmXNNLzJjkkpQU\nyVegQaEEI7JNadVdotUvnD5rKpIBgeWaKnVge0pp6TbXAAPRO5/XXIyZEtEIUmW/\nbTw7Tyvy0I1uSP9OAExPleMG0b+eojH8cSs2O4Oqlrikm4GH1StTdsuEi4WwRMBS\nOYF9pBQY3MAEU3ugN2TG3mIUQP6rlbAdHUMzTNv4z9Cucn03lnIAWPCGfohKw9bR\n5I2TO/TWPK2D+rhzKl8W3zZhUCGh7dzTOcLfx4/ZMP5oPxD4QE8AgWiMoO1ZnWdx\nfXv7a9f+UWkozl5Mh//s93DgOk6XFuQtA391bMaenz6FqUnF6kfwtAQLQk7OXzkf\nPNE4kFfNrcXlx0gxsVI5k1cM/IXB4Ldix2AXzuFr0mECAwEAAaNCMEAwDgYDVR0P\nAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHoecXped4NbhuFb\nXE3yfis1Mh59MA0GCSqGSIb3DQEBCwUAA4ICAQBlp5hbDgtmjL5TDyYERNe3nQuI\nb8ObuOR17+lNRti4pqxGpeecIxbqe0dW4wUx5OfUKIkpNMP56QGXdhDNZ+uxoEkg\nhs4oW/oc7hRY/VHQda1rh+kFMs7lygkPWPnfVY8kmtNs4KOa3V0KZ/SKBsWdkqof\nuFy7Hfmk8kkVZCqeApKghR8xKJ2Nc2smWTIoqo7ByYYI9OIgqdS2UCQR8UdW3S6D\nvT1NtfXaQ03/aeYWZYLr+0XvK8yi5Ys679rjmV2k89H/lV6N7aB/5/yR5hGQQKf7\nliPz/6jPyE64ExroQUrqSr5bWJl/TPB8Cnhx6/5dEq51WIIAQetz6GQcZM/4UOF3\nZybYRu+cb6BOhl9TX2rveohb4RS3JH8lGXyHxYHlXPQlubUTvohn34xO94Tvx/TE\n7RjdDliXQZ1QmrXEIIpuqq7mHFH1gJaROc0JQgrAYOWfbX59czZvR7HykkMd+E00\nCzb/5COUMbq5qCZ+5dTqErsuH5tEdwpt/Yh6a2NOdYp1TtCR6KeByr12qRoQb+G6\nhiPpVmu7Zb9FHjsAgAHuHZ4A1j0sV86NsFVC1bRAwi5JsIYZlWrxPBiN68iSpx38\n5e/TfMBiKGKg0TigJ6XoP6HfHQ+toh6JBSXS9k0Rjgmcziefh9PtWNwojPJHE1/J\nD6JvYeXRohygOeyoRg==\n-----END CERTIFICATE-----\n",
              "namespace": "kube-federation-system",
              "token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjlrMWVXak9XUVNoOGhfUmhUc1NoRVZrSXFaNVgwWEV0ZExtR0R3WWJSMzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLWZlZGVyYXRpb24tc3lzdGVtIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Ims4c3Rlc3QtdG9rZW4tNDZqcGwiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjRiMWY0YTU1LWM5YzEtNGEwOC1iY2UxLTUxMWE4MTI3NjlhNCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLWZlZGVyYXRpb24tc3lzdGVtOmRlZmF1bHQifQ.gzRelGuzK1aZv1i78F_tso1W20YQlUmlAxhHPAbqSWbmipDlvuqVsj-wMCUFfkPX86Yi_TD6D9Qz6Cm9Od9NrBWGRg2xs5ny75eKxC5RUXn0XbWpHen_p_8fAo3YdRi_WkLDmE2H8l6QSXWzYPEf5oSSywNk5XPUicdCaRWNxRMorMps1ya4MFmu6h-YVJQUQQsypJZFXrg5fdcNG3L8v7OtAU5PLf39PZGE3vXFbCdiu1TVb80faYV0cYO4HUXUX8mqOyGYy49aLk9xMJyja2YADE5C2jLvfPXwPblozJOv0HPT5hN8sEO6eNaqIY_OUeqH2S3fwbN1nfKe_lqbxAfPrLGOkzQPv0ghV9bMvOAzdUfKNgH-AcNAtN5V3c8GjfLeYYyrTBwyk_hS0Gl3aJISK07cGcoyqb9TLUMDW7-FZDiLLzB-jG6ncYdYvu4SgmajUD34hOGZS7KKv1qwo8HuoqiUZdFzdVLM8kyT6c2r5Yz-7NkcsXqFsuBmiQFmARMa7gyY4-ks9NuJCjDnrTmnYN7fYkOFt8wH5Lu71mtPn4TLZA-anJXH3oH1osGi-AewLJFhWb_aQhHozNa-joCEGjPYGSMdKqy3Tfc8aomREfFIIl5ZlbsJ_PlZf__cWAoaIS05tHmq4NmArlTShmWQbSYI_--MHw68jPOHpzQ"
            },
            "id": "kube-federation-system/k8stest-token-46jpl",
            "metadata": [
              {
                "annotations": {
                  "kubernetes.io/service-account.name": "default"
                },
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "k8stest-token-46jpl",
                "namespace": "kube-federation-system",
                "resource_version": "40134",
                "uid": "9f2faaae-88b2-4573-85d5-c6a9ec02ef88"
              }
            ],
            "type": "kubernetes.io/service-account-token"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.azurerm_kubernetes_cluster.main",
            "kubernetes_service_account.hcp"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "sc",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"].master",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "k8stest-token-46jpl.yaml": "apiVersion: v1\ndata:\n  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQUtGSittdmNFR1dWbDVnSHluVTRBMWt3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpFd056SXdNREUxT0RFeFdoZ1BNakExTVRBM01qQXdNakE0TVRGYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCnE0OVFtWU0xNDhsK2VzelJmbC9uWkpjblQzd296cW9KQzdJVDdOOGJxK1JUK2lvcHFXZVUzY3dnTm5PS0ZwM0IKKy8yOXpGWTBqVzZZRXVTUEVpSWFxak9KL0xaUUwyU0t5bytOUTVsV0lpaEQrREM1aEtVZDNLTnJXbDZKRjRRYgpCaDZlT1FKUkFpRXlTNi9uNkY4c1daOWNHTERmcjZkSGkveTRHazhoM085c0NYTDV0d3ZGUVcxeklrRlR1ZUFxCmZVRlk2VjUvTWcrcWFZZS9QY1VhRm1PWHpTY1Y5RUpoZVorRjYxQU5sVG9CVEt0YU1IMHkyNFYzYjNYVEVwSjYKblMxSzI4ejFqa2ErVEpXQ1BrU1RCaEdvYzArYVF4LzVlTDY1RnVFS3FkZDlQcTJnd3p0bVhOTkx6Smpra3BRVQp5VmVnUWFFRUk3Sk5hZFZkb3RVdm5ENXJLcElCZ2VXYUtuVmdlMHBwNlRiWEFBUFJPNS9YWEl5WkV0RUlVbVcvCmJUdzdUeXZ5MEkxdVNQOU9BRXhQbGVNRzBiK2Vvakg4Y1NzMk80T3FscmlrbTRHSDFTdFRkc3VFaTRXd1JNQlMKT1lGOXBCUVkzTUFFVTN1Z04yVEczbUlVUVA2cmxiQWRIVU16VE52NHo5Q3VjbjAzbG5JQVdQQ0dmb2hLdzliUgo1STJUTy9UV1BLMkQrcmh6S2w4VzN6WmhVQ0doN2R6VE9jTGZ4NC9aTVA1b1B4RDRRRThBZ1dpTW9PMVpuV2R4CmZYdjdhOWYrVVdrb3psNU1oLy9zOTNEZ09rNlhGdVF0QTM5MWJNYWVuejZGcVVuRjZrZnd0QVFMUWs3T1h6a2YKUE5FNGtGZk5yY1hseDBneHNWSTVrMWNNL0lYQjRMZGl4MkFYenVGcjBtRUNBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSG9lY1hwZWQ0TmJodUZiClhFM3lmaXMxTWg1OU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQmxwNWhiRGd0bWpMNVREeVlFUk5lM25RdUkKYjhPYnVPUjE3K2xOUnRpNHBxeEdwZWVjSXhicWUwZFc0d1V4NU9mVUtJa3BOTVA1NlFHWGRoRE5aK3V4b0VrZwpoczRvVy9vYzdoUlkvVkhRZGExcmgra0ZNczdseWdrUFdQbmZWWThrbXROczRLT2EzVjBLWi9TS0JzV2RrcW9mCnVGeTdIZm1rOGtrVlpDcWVBcEtnaFI4eEtKMk5jMnNtV1RJb3FvN0J5WVlJOU9JZ3FkUzJVQ1FSOFVkVzNTNkQKdlQxTnRmWGFRMDMvYWVZV1pZTHIrMFh2Szh5aTVZczY3OXJqbVYyazg5SC9sVjZON2FCLzUveVI1aEdRUUtmNwpsaVB6LzZqUHlFNjRFeHJvUVVycVNyNWJXSmwvVFBCOENuaHg2LzVkRXE1MVdJSUFRZXR6NkdRY1pNLzRVT0YzClp5YllSdStjYjZCT2hsOVRYMnJ2ZW9oYjRSUzNKSDhsR1h5SHhZSGxYUFFsdWJVVHZvaG4zNHhPOTRUdngvVEUKN1JqZERsaVhRWjFRbXJYRUlJcHVxcTdtSEZIMWdKYVJPYzBKUWdyQVlPV2ZiWDU5Y3padlI3SHlra01kK0UwMApDemIvNUNPVU1icTVxQ1orNWRUcUVyc3VINXRFZHdwdC9ZaDZhMk5PZFlwMVR0Q1I2S2VCeXIxMnFSb1FiK0c2CmhpUHBWbXU3WmI5Rkhqc0FnQUh1SFo0QTFqMHNWODZOc0ZWQzFiUkF3aTVKc0lZWmxXcnhQQmlONjhpU3B4MzgKNWUvVGZNQmlLR0tnMFRpZ0o2WG9QNkhmSFErdG9oNkpCU1hTOWswUmpnbWN6aWVmaDlQdFdOd29qUEpIRTEvSgpENkp2WWVYUm9oeWdPZXlvUmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n  namespace: a3ViZS1mZWRlcmF0aW9uLXN5c3RlbQ==\n  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqbHJNV1ZYYWs5WFVWTm9PR2hmVW1oVWMxTm9SVlpyU1hGYU5WZ3dXRVYwWkV4dFIwUjNXV0pTTXpnaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpyZFdKbExXWmxaR1Z5WVhScGIyNHRjM2x6ZEdWdElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WldOeVpYUXVibUZ0WlNJNkltczRjM1JsYzNRdGRHOXJaVzR0TkRacWNHd2lMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2lhemh6ZEdWemRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNklqWTRaVFF3Tm1ZM0xUVTVNMlF0TkdZNE55MDRPVGt4TFdJek56WmhNekJpWXpNM1l5SXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHByZFdKbExXWmxaR1Z5WVhScGIyNHRjM2x6ZEdWdE9tczRjM1JsYzNRaWZRLmFwVXZJYkhGLW12VE1PRXhreDBBNGY3dGUxdWh2V1JuR2ptTTFyNDloMWtJMXRDc1JvdUk4aFpMcmNBSnVYbXlwdy10cXBwaDZaa1hlVWVHMzRKUGw2VXZtWTVkV0FhQ1RVMndfZFVtSGZYcWpRRjdWNzdfamt0dW9QdWM3SzdZWk1PVzA5V013QXhtaVZlQXMtWGNDV0NXdWoxVkw4c2tWNFBVby1uWDI2VHpteF9OV0hCTHdUbTR1Q050Um4xVExnV3JiYmgxWXdieWx2cDJ6VjZqa1BpSlMxZ1M0UE5Wa21Ub3hya0FCTko4X2R4aEdZZlRXeEx2UWdPN1c0X0s2a25leXQyc3RIc0diZ0Z6M1gxTDZwNDl1bEZsbTUxQTBrS1FlRzNsdzBfZ3dVTzFiYWhGb05uVFNLZlhfZWcxUE5HS0xyYUhZTjRQcFpDLVZVeTh5MnhHMDZ3a1pFQ25WbnFFeU9MSzAwY3JBc3VKVS1jbnlRTzFTMUpvYUJwd1RST0ZmMDh5VjlpWF96NDgzbDM5SWk2VmphaUdsUlVBajFnZ3dVaFVEMWc5elRVU3BfbnlEZTI3bG93M3ZVQnJsX3dhV0dmejJoLVE4cWQ3Y1dHSjY4UERtcmx0WEJvZ3IzVjBLblZoUG13Vm95dm5wcTlmQ1lrSlFfZFhzcnBTekxXY19OenFNYjlWMVhXRlZidVFEdUdCdWlhUDd0NlVwMy1WZ05xbkRhYkl0TDFPVjZZVzFJdmo0ZC1Ha0psQ1pFYnVVcWIxcWZUbDBjcjc4OVdub19SeFNNVFpmbXMtYzM1ekpTTy1sellTdjZtcDhYVUpUTDN3aWZFVXk5eFp0dVZpQXFxWnJzZHZnR1J0NVF3MzVNV1ZHVDFqZWdxeXBhVlphNG14b0V3\nkind: Secret\nmetadata:\n  annotations:\n    kubernetes.io/service-account.name: k8stest\n    kubernetes.io/service-account.uid: 68e406f7-593d-4f87-8991-b376a30bc37c\n  creationTimestamp: \"2021-07-20T06:44:03Z\"\n  name: k8stest-token-46jpl\n  namespace: kube-federation-system\n  resourceVersion: \"39832\"\n  selfLink: /api/v1/namespaces/kube-federation-system/secrets/k8stest-token-46jpl\n  uid: 4612e722-46b2-4fa6-8756-6bda91af9d79\ntype: kubernetes.io/service-account-token\n"
            },
            "id": "kube-federation-system/k8stest-token-46jpl",
            "metadata": [
              {
                "annotations": {
                  "kubernetes.io/service-account.name": "default"
                },
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "k8stest-token-46jpl",
                "namespace": "kube-federation-system",
                "resource_version": "17736029",
                "uid": "656b3ed1-f27e-43f8-94f5-2707fb20a71b"
              }
            ],
            "type": "kubernetes.io/service-account-token"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.azurerm_kubernetes_cluster.main",
            "kubernetes_service_account.hcp"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "hcp",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"].azureCluster",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": true,
            "default_secret_name": "k8stest-token-46jpl",
            "id": "kube-federation-system/k8stest",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {
                  "kubernetes.io/service-account.name": "default"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "k8stest",
                "namespace": "kube-federation-system",
                "resource_version": "40128",
                "uid": "68e406f7-593d-4f87-8991-b376a30bc37c"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.azurerm_kubernetes_cluster.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "createYAMLfile",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "9012101289945695766",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_service_account.hcp",
            "data.azurerm_kubernetes_cluster.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "mergekubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1895796481868371684",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.azurerm_kubernetes_cluster.main"
          ]
        }
      ]
    }
  ]
}
